worker_processes 2;

worker_rlimit_nofile 10240;
pid        /var/run/nginx.pid;

events {
	use epoll;
	worker_connections 4096;
}

http {
	include       mime.types;
	default_type  text/html;
	types_hash_max_size 2048;
	
	charset utf-8;
	charset_types *;

	log_format  tiny	'-- $request_method $host$request_uri $status';
	
	log_format  cache	'-- $request_method $host$request_uri $status, $upstream_cache_status.';
	
	access_log /dev/stdout tiny;
	error_log /dev/stderr warn;
	
	server_names_hash_bucket_size 128;
	client_header_buffer_size 32k;
	large_client_header_buffers 4 32k;
	client_max_body_size 50m;

	sendfile on;
	tcp_nopush on;

	keepalive_timeout 60;

	proxy_buffer_size          1m;
	proxy_buffers              16 1m;
	proxy_busy_buffers_size    1m;
	proxy_intercept_errors on;

	tcp_nodelay on;

	gzip off;
	
	proxy_cache_path /tmp/npm-registry-package-cache levels=1:2 keys_zone=package_cache:2m inactive=60m;
	server {
		server_name _;
		listen ${LISTEN_PORT} default_server;
		
		proxy_connect_timeout 1s;
		proxy_http_version 1.1;
		proxy_buffer_size 128k;
		proxy_buffers 32 32k;
		proxy_busy_buffers_size 128k;
		
		location ^~ /@${NPM_PRIVATE_SCOPE} {
			proxy_set_header Host npm-registry;
			proxy_pass http://127.0.0.1:8888;
			break;
		}
		
		location / {
			proxy_set_header Host npm-registry;
			proxy_pass http://127.0.0.1:8888;
			break;
		}
		
		location ~ \/[^\.\/]+$ {
			proxy_set_header       Host npm-registry;
			add_header             Cache-Control "public";
			add_header             X-Cached $upstream_cache_status;
			
			proxy_cache            package_cache;
			proxy_cache_bypass     $arg_update;
			proxy_cache_revalidate on;
			proxy_cache_valid      200  24h;
			proxy_cache_valid      any  1m;
			proxy_cache_use_stale  error timeout invalid_header updating
								   http_404 http_500 http_502 http_503 http_504;
			
			access_log             /dev/stdout cache;
			
			expires                12h;
			proxy_pass http://127.0.0.1:8888;
			break;
		}
	}
}
